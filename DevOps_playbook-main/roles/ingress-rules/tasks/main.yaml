---
- name: Create Grafana Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: grafana-ingress
        namespace: monitoring
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/rewrite-target: /$1
      spec:
        rules:
          - host: grafana.{{ domain_name | default('local') }}
            http:
              paths:
                - path: /(.*)
                  pathType: Prefix
                  backend:
                    service:
                      name: prometheus-grafana
                      port:
                        number: 80

- name: Create Prometheus Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: prometheus-ingress
        namespace: monitoring
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
      spec:
        rules:
          - host: prometheus.{{ domain_name | default('local') }}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: prometheus-kube-prometheus-prometheus
                      port:
                        number: 9090

- name: Create ArgoCD Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-ingress
        namespace: argocd
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      spec:
        rules:
          - host: argocd.{{ domain_name | default('local') }}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: argocd-server
                      port:
                        number: 80 